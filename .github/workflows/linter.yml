#name: Lint Code Base
#
#on:
#  push:
#    branches:
#      - 'task/**'
#
#    # Remove the line above to run when pushing to master
#  pull_request:
#    branches:
#      - 'task/**'
#
#jobs:
#  run-linters:
#    name: Run linters
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Check out Git repository
#        uses: actions/checkout@v2
#
#      - name: Set up Python
#        uses: actions/setup-python@v1
#        with:
#          python-version: 3.7
#
#      - name: Install Python dependencies
#        run: pip install pylint
#
#      - name: Run linters
#        uses: wearerequired/lint-action@v1
#        with:
#          pylint: true
#

name: configuration for python env
on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10


    steps:
      - uses: actions/checkout@v2
      - name: Install python version
        uses: gabrielfalcao/pyenv-action@v7
        with:
          default: 3.7
          command: pip install -U pip  # upgrade pip after installing python

      - name: create environment
        run: pyenv local 3.7 && python -mvenv .venv37

      - name: Install dependencies
        run: pip install -r requirements.txt --upgrade pip
             pip install pylint
      - name: Analysing the code with pylint
        run: |
          pylint `ls -R|grep .py$|xargs`

      - name: setup pyenv
        id: pyenv_installation
        uses: "gabrielfalcao/pyenv-action@v7"

      - name: debug pyenv
        run: echo ${{ steps.pyenv_installation.outputs.pyenv_root }}